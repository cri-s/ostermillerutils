  ----
  Comma Separated Values (CSV)
  ----
  Stephen Ostermiller;
  meta-description=Java libraries to read and write files in Comma Separated Value (CSV) format.;
  ----

Comma Separated Values (CSV)






Utilities for reading and writing CSV (comma separated value) text files.  CSV as supported by these classes uses backslashes to escape quotes and new lines.  For CSV that is compatible with Microsoft Excel, {{{ExcelCSV.html}separate Excel CSV libraries}} are available.


Example
<pre>// Create the printer
CSVPrinter csvp = new CSVPrinter(
    System.out
);

// Write to the printer
csvp.writeln(
    new String[]{
        &quot;hello&quot;,&quot;world&quot;
    }
);</pre>


Writing CSV files: CSVPrinter
  This class makes it easy to output CSV.  Given values, it will automatically determine if they need to be quoted and
escape special characters.  Comments can easily be written and correct line beginnings will be added.

  Some applications do not accept CSV input according to the generally accepted standards.  One such application is the Microsoft Excel 
spreadsheet.  A separate class must be use to write 
{{{ExcelCSV.html}Excel CSV}}.  Both CSVPrinter and ExcelCSVPrinter
implement the CSVPrint interface.

<br clear=all>
<hr>

Example
<pre>// Parse the data
String[][] values = CSVParser.parse(
    new StringReader(
        &quot;hello,world\n&quot; +
        &quot;how,are,you&quot;
    )
);

// Display the parsed data
for (int i=0; i&lt;values.length; i++){
    for (int j=0; j&lt;values[i].length; j++){
        System.out.println(values[i][j]);
    }
    System.out.println(&quot;-----&quot;);
}</pre>


<a name="csv_parser">Reading CSV files: CSVParser</a>

  Java's StringTokenizer does not make it easy to parse files of comma separated values for two reasons.
First StringTokenizer doesn't handle empty strings and second it doesn't have a way to easily get
Strings in quotes that have commas inside them.  This CSV parser takes care of those issues and
support line numbering, escape characters, and comments.  Each line of values can be returned as an array, or 
the values can be returned individually with the number of the line from which they came.

  Some applications do not output CSV according to the generally accepted standards and this parse may
not be able to handle it.  One such application is the Microsoft Excel spreadsheet.  A 
separate class must be use to read 
{{{http://ostermiller.org/utils/ExcelCSV.html}Excel CSV}}.  Both CSVParser and ExcelCSVParser
implement the CSVParse interface.

  If the first line of your CSV file is a row of column headings, consider wrapping this parser in a {{{LabeledCSVParser.html}Labeled CSV Parser.}}

CSV Character Sets
  Several people have asked how to read CSV files that are in other character sets such as
Chinese or Japanese.  To parse such files, simple use the CSVParser constructor that takes a reader.
Make sure the reader has been initialized to read the correct character set.  An example that reads
Simplified Chinese (charset GB2312) CSV values from {{{CSVCharsetTest.gb2312csv}CSVCharsetTest.gb2312csv}}
can be found in {{{CSVCharsetTest.java}CSVCharsetTest.java}}.  If you have a Chinese font 
installed and Java is set up to use it, the example will show a dialog with each of the Chinese 
words on it.

<br clear=all>

CSVLexer

  The lexer (CSVLexer) created using {{{http://www.jflex.de/}JFlex}} is still available in the download and is
still supported.  In fact,  CSVParser uses it behind the scenes.  However, CSVParser has a much cleaner, full-featured API
and its use is recommended.

  A CSVLexer {{{CSVRegressionTest.csv}regression test}} and the expected
{{{CSVRegressionTestResults.txt}results}} of that test are available.

<a name="links"></a>Links
<table border=2 cellpadding=5>
<tr><th>Author</th><th>License</th><th>Features</th></tr>

<tr><td>
Stephen Ostermiller<br>
{{{http://ostermiller.org/utils/CSV.html}ostermillerutils CSV and ExcelCSV for Java}}
</td><td>
Open source, GPL
</td><td>
Parses CSV streams into Java Strings or arrays of Strings.
</td></tr>

<tr><td>
Ricebridge<br>
{{{http://www.ricebridge.com/products/csvman/index.htm}CSV Manager}}
</td><td>
Commercial, with various license price points.
</td><td>
Parses CSV streams with callback methods when data is found. Single CSV parsing class can be
configured to parse standard CSV, Excel CSV, or other user specified variants.
</td></tr>

<tr><td>
E.Allen Soard<br>
{{{http://sourceforge.net/projects/javacsv/} Java CSV Library}}
</td><td>
Open source, LGPL
</td><td>
Parses CSV files into Java objects contained entirely in memory.
</td></tr>

<tr><td>
Nilo de Roock<br>
{{{http://xlsql.sourceforge.net/}xlSQL }}
</td><td>
Open source, GPL
</td><td>
Provides a JDBC interface for accessing CSV files.
</td></tr>

<tr><td>
Bruce Dunwiddie<br>
{{{http://www.csvreader.com/}CsvReader }}
</td><td>
Commercial, with various license price points.
</td><td>
Reads CSV files one line at a time and values may be obtained by name (similar to LabeledCSVParser) or by index. Single CSV parsing class can be configured to parse standard CSV, Excel CSV, or other user specified variants. A .Net version of the parser is also available.
</td></tr>

<tr><td>
Roedy Green<br>
{{{http://mindprod.com/jgloss/csv.html}Mindprod CSV}}
</td><td>
Open source, freeware (except military)
</td><td>
CSV definition and libraries.
</td></tr>

</table>



<b>Comma Separated Values (CSV)</b>

  * {{{CSVPrinter.java.html}CSVPrinter Source}}

  * {{{doc/com/Ostermiller/util/CSVPrinter.html}CSVPrinter Documentation}}

  * {{{CSVParser.java.html}CSVParser Source}}

  * {{{doc/com/Ostermiller/util/CSVParser.html}CSVParser Documentation}}

  * {{{http://bugzilla.ostermiller.com/buglist.cgi?product=JavaUtils&component=CSV&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED}Bugs/Features}}





